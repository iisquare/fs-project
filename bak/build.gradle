// 插件
apply plugin: 'maven'  
apply plugin: 'war'  
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

// 项目配置
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// 源码目录
sourceSets {
	main {
		java {
			srcDir 'frame'
			srcDir 'core'
			srcDir 'model'
			srcDir 'spark'
			srcDir 'plugins/etl-core/src/main/java'
			srcDir 'plugins/etl-test/src/main/java'
		}
	}
}
// 仓库
repositories {
	//mavenCentral()
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}
// 依赖
def springVersion = '4.2.7.RELEASE'
def sparkVersion = '2.1.1'
def hbaseVersion = '1.2.4'
def elasticsearchVersion = '5.1.1'
def gradleVersion = gradle.gradleVersion
dependencies {
	testCompile (
		[group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.4.6.v20170531']
	)
	compile (
		// J2EE
		[group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'],
		[group: 'jstl', name: 'jstl', version: '1.2'],
		// Spring
		[group: 'org.springframework', name: 'spring-web', version: springVersion],
		// JSON
		[group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.9'],
		// View
		[group: 'org.freemarker', name: 'freemarker', version: '2.3.23'],
		// MySQL
		[group: 'mysql', name: 'mysql-connector-java', version: '5.1.39'],
		// Spark
		[group: 'org.apache.spark', name: 'spark-core_2.11', version: sparkVersion],
		[group: 'org.apache.spark', name: 'spark-streaming_2.11', version: sparkVersion],
		[group: 'org.apache.spark', name: 'spark-streaming-kafka-0-8_2.11', version: sparkVersion],
		[group: 'org.apache.spark', name: 'spark-sql_2.11', version: sparkVersion],
		[group: 'org.apache.spark', name: 'spark-mllib_2.11', version: sparkVersion],
		// Elasticsearch
		[group: 'org.elasticsearch', name: 'elasticsearch-spark-20_2.11', version: elasticsearchVersion],
		// Quartz
		[group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.3'],
	)
}

// 项目设置
archivesBaseName = 'etl-visual'
eclipse.project.name = archivesBaseName
war.baseName = eclipse.project.name

// 部署测试文件
task deployTest() {
	delete "src/main/webapp/WEB-INF/classes/"
	copy {
		from 'src/main/resources'
		into "src/main/webapp/WEB-INF/classes"
	}
}

// 依赖编译，然后打包JAR文件
task sparkJar(type:Jar, dependsOn: compileJava) {
	from 'build/classes/java/main'
	destinationDir = file('build/libs')
}
