<!doctype html>
[#include "../../public/common.inc.htm"]
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="shortcut icon" href="${webUrl}/statics/favicon.ico" type="image/x-icon" />
    <link rel="bookmark" href="${webUrl}/statics/favicon.ico" type="image/x-icon" />
    <title>任务流程图 - ${siteName}</title>
    <link rel="stylesheet" type="text/css" href="${webUrl}/statics/plugins/jquery-easyui/themes/bootstrap/easyui.css">
    <link rel="stylesheet" type="text/css" href="${webUrl}/statics/plugins/jquery-easyui/themes/icon.css">
    <link rel="stylesheet" type="text/css" href="${webUrl}/statics/plugins/ace_admin/components/font-awesome/css/font-awesome.css">
    <style type="text/css">
        .layout-north{height:28px;}
        .layout-south{height:22px;padding: 2px;}
        .layout-east{width:280px;}
        .layout-west{width:180px;}
        .layout-center{background:#eee; position: relative;}
        #flow-chart-canvas{width:700px; height:500px; position:relative; margin:auto; background:url("${webUrl}/statics/images/grid.gif");}
        .flow-chart-item{position: absolute;}
        .easyui-linkbutton i{border-bottom-style: solid; border-bottom-width: 1px;}
        .message-underline-none{}
        .message-underline-grey{border-bottom-color: grey; color: grey;}
        .message-underline-blue{border-bottom-color: blue; color: blue;}
        .message-underline-green{border-bottom-color: green; color: green;}
        .message-underline-yellow{border-bottom-color: yellow; color: yellow;}
        .message-underline-red{border-bottom-color: red; color: red;}
    </style>
</head>
<body class="easyui-layout">
    <div class="layout-north" data-options="region:'north'">
        <span>操作：</span>
        <button class="easyui-linkbutton flow-chart-state-refresh" data-options="iconCls:'icon-reload',plain:true">同步状态</button>
        <span>状态：</span>
        <button class="easyui-linkbutton" data-options="plain:true"><i class="message-underline-grey">Waiting</i></button>
        <button class="easyui-linkbutton" data-options="plain:true"><i class="message-underline-blue">Running</i></button>
        <button class="easyui-linkbutton" data-options="plain:true"><i class="message-underline-green">Succeed</i></button>
        <button class="easyui-linkbutton" data-options="plain:true"><i class="message-underline-yellow">Warning</i></button>
        <button class="easyui-linkbutton" data-options="plain:true"><i class="message-underline-red">Failed</i></button>
    </div>
    <div class="layout-south" data-options="region:'south'">状态信息：<span id="tips-status">
    </span></div>
    <div class="layout-east" data-options="region:'east',title:'属性',split:true">
        <table id="flow-property-table" style="width:100%;"></table>
    </div>
    <div class="layout-west" data-options="region:'west',title:'节点',split:true">
        <ul id="flow-nodes-tree"></ul>
    </div>
    <div class="layout-center" data-options="region:'center',title:'流程图',content:''">
        <div id="flow-chart-canvas"></div>
    </div>
<script src="${webUrl}/statics/js/jquery-1.12.4.js"></script>
<script src="${webUrl}/statics/plugins/jquery-easyui/jquery.easyui.min.js"></script>
<script src="${webUrl}/statics/plugins/jsplumb/jsplumb.js"></script>
<script src="${webUrl}/statics/js/backend.js"></script>
<script type="application/javascript">
jsPlumb.bind("ready", function() {
    function ContextMenu(e, data) {
        this.container = $('body');
        this.container.children('.context-menu, .menu-shadow').remove();
        var _this = this;
        var $contextMenu = $('<div class="context-menu"></div>');
        $contextMenu.menu({
            onHide : function () {
                window.setTimeout(function () {
                    $contextMenu.menu('destroy');
                }, 200);
            }
        });
        for (var index in data) {
            var item = data[index];
            $contextMenu.menu('appendItem', item);
        }
        this.container.append($contextMenu);
        $contextMenu.menu('show', {top: e.pageY, left: e.pageX});
    }
    function generatePropertyRows(target, nodeRows, configRows) {
        var rows = [
            {"name":"节点","key":"node","value":target.id,"group":"基础信息"},
            {"name":"别名","key":"alias","value":"","group":"基础信息","editor":"text"},
            {"name":"名称","key":"text","value":$(target).text(),"group":"基础信息","editor":"text"},
            {"name":"备注","key":"description","value":"","group":"基础信息","editor":"textarea"}
        ];
        rows = rows.concat(nodeRows);
        for (var index in rows) {
            var item = rows[index];
            if(!item.key || !configRows[item.key]) continue;
            rows[index] = configRows[item.key];
        }
        return rows;
    }
    function jsPlumbFlowNode(id) {
        jsPlumbInstance.draggable(id, {containment:'#flow-chart-canvas'});
        var anchors = ["TopCenter", "RightMiddle", "BottomCenter", "LeftMiddle"];
        var result = {};
        for (var index in anchors) {
            result[id + '_' + anchors[index]] = jsPlumbInstance.addEndpoint(id, {anchor : anchors[index]}, {
                isSource : true,
                isTarget : true,
                maxConnections : -1,
                connectorOverlays: [["Arrow", { width: 10, length: 10, location: 1 }]]
            });
        }
        return result;
    }
    function bindTips($obj, content) {
        if(!content) content = '暂无备注';
        $obj.find('.ace-icon').tooltip({
            position: 'right',
            content: content.replace(/\n/g, '<br>')
        });
    }
    function propertygridCanvas() {
        $flowPropertyTable.propertygrid({
            showGroup : true,
            border : false,
            data:{total:0, rows:[
                {"name":"宽度","key":"width","value":$flowChartCanvas.width(),"group":"画布设置","editor":"numberbox"},
                {"name":"高度","key":"height","value":$flowChartCanvas.height(),"group":"画布设置","editor":"numberbox"}
            ]},
            onAfterEdit : function (rowIndex, rowData, changes) {
                if(!rowData.key) return true;
                switch (rowData.key) {
                    case "width" :
                        $flowChartCanvas.width(rowData.value);
                        break;
                    case "height" :
                        $flowChartCanvas.height(rowData.value);
                        break;
                }
            }
        });
        $flowPropertyTable.data('id', '');
    }
    var flowChartIndex = 0; // 节点索引
    var flowChartValue = {}; // 对应节点配置数据
    var flowChartLastMouseMoveEvent = null;
    var $flowChartCanvas = $('#flow-chart-canvas');
    var $layoutCenter = $('.layout-center');
    var $flowPropertyTable = $('#flow-property-table');
    var $flowNodesTree = $('#flow-nodes-tree');
    var $tipsStatus = $('#tips-status');
    var jsPlumbInstance = jsPlumb.getInstance({
        Endpoint:["Dot", {radius:2}]
    });
    propertygridCanvas();
    $layoutCenter.on('contextmenu', function () {return false;});
    $flowChartCanvas.on('click', '.flow-chart-item', function (e) {
        var _this = this;
        var $obj = $(this);
        var node = $flowNodesTree.tree('find', $obj.data('parent'));
        if($flowPropertyTable.data('id') == this.id) return false;
        $flowPropertyTable.data('id', this.id);
        var propertygrid = $.extend(true, {data:{total:0, rows:[]}}, node.propertygrid || {}, {
            onAfterEdit : function (rowIndex, rowData, changes) {
                if(!rowData.key) return true;
                flowChartValue[_this.id][rowData.key] = rowData;
                switch (rowData.key) {
                    case "text" :
                        var value = rowData.value;
                        var content = flowChartValue[_this.id]["description"] ? flowChartValue[_this.id]["description"].value : null;
                        if(content) value += '<i class="ace-icon fa fa-comments-o"></i>';
                        $obj.linkbutton({text:value});
                        bindTips($obj, content);
                        jsPlumbInstance.repaintEverything();
                        break;
                    case "description" :
                        var value = $obj.text();
                        if(flowChartValue[_this.id]["text"]) value = flowChartValue[_this.id]["text"].value;
                        if(rowData.value) value += '<i class="ace-icon fa fa-comments-o"></i>';
                        $obj.linkbutton({text:value});
                        bindTips($obj, rowData.value);
                        jsPlumbInstance.repaintEverything();
                        break;
                }
            }
        });
        if(!flowChartValue[_this.id]) flowChartValue[_this.id] = {};
        propertygrid.data.rows = generatePropertyRows(_this, propertygrid.data.rows, flowChartValue[_this.id]);
        $flowPropertyTable.propertygrid(propertygrid);
        return false;
    }).on('click', function () {
        propertygridCanvas();
    });
    $(window).on('resize', function () {
        window.setTimeout(function () {
            var top = $('.layout-center').height() - $flowChartCanvas.height();
            if(top < 0) top = 0;
            $flowChartCanvas.css({'margin-top':top / 2});
        }, 200);
    }).trigger('resize');
    $flowChartCanvas.on('mousemove', function (e) {
        flowChartLastMouseMoveEvent = e;
    });
    $flowNodesTree.tree({
        url : '${_base_.url("flow", "plugins")}',
        onLoadSuccess : function (node, data) {
            (function (data) {
                if(!data) return;
                var data = $.parseJSON(data);
                $flowChartCanvas.css({width:data.width, height:data.height});
                propertygridCanvas();
                var endpoints = {};
                for (var i in data.nodes) {
                    var item = data.nodes[i];
                    if(item.index > flowChartIndex) flowChartIndex = item.index;
                    var property = {};
                    for(var j in item.property) {
                        property[item.property[j].key] = item.property[j];
                    }
                    flowChartValue[item.id] = property;
                    var node = $flowNodesTree.tree('find', item.parent);
                    var value = property['text'].value;
                    if(property['description'].value) value += '<i class="ace-icon fa fa-comments-o"></i>';
                    var $obj = $('<button id="' + item.id + '" class="flow-chart-item"></button>');
                    $obj.data('index', item.index);
                    $obj.data('parent', item.parent);
                    $obj.linkbutton({
                        text : value,
                        iconCls : node.iconCls
                    });
                    $flowChartCanvas.append($obj);
                    $obj.css({
                        top : item.top,
                        left : item.left
                    });
                    bindTips($obj, property['description'].value);
                    $.extend(endpoints, jsPlumbFlowNode(item.id));
                }
                flowChartIndex++;
                for (var i in data.connections) {
                    var connection = data.connections[i];
                    jsPlumbInstance.connect({
                        source : endpoints[connection.sourceId + '_' + connection.sourceAnchor],
                        target : endpoints[connection.targetId + '_' + connection.targetAnchor]
                    });
                }
                window.setTimeout(function () {
                    jsPlumbInstance.repaintEverything();
                    $('.flow-chart-state-refresh').on('click', function () {
                        var $obj = $(this);
                        if($obj.linkbuttonToggle('同步中...')) return false;
                        $.ajax({
                            url : '${_base_.url("state")}?id=${info.id}',
                            success : function (result) {
                                $obj.linkbuttonToggle();
                                result = Web_parseMessage(result);
                                if(0 != result.code) {
                                    $tipsStatus.html(result);
                                    return;
                                } else {
                                    $tipsStatus.html('状态已同步');
                                }
                                var messageClass = ['message-underline-none', 'message-underline-grey', 'message-underline-blue',
                                    'message-underline-green', 'message-underline-yellow', 'message-underline-red'];
                                var $flowChartItem = $('.flow-chart-item');
                                for (var i in messageClass) {
                                    $flowChartItem.removeClass(messageClass[i]);
                                }
                                $flowChartItem.each(function () {
                                    var $node = $(this);
                                    var id = $node.attr('id');
                                    var item = result.data[id];
                                    if(!item) {
                                        $node.addClass('message-underline-grey');
                                    } else if('' != item.content) {
                                        $node.addClass('message-underline-red');
                                    } else if(0 == item.end_time) {
                                        $node.addClass('message-underline-blue');
                                    } else {
                                        $node.addClass('message-underline-green');
                                    }
                                    $node.off('click.state').on('click.state', function () {
                                        var html = [];
                                        html.push('开始时间:' + Web_formatDateTime(item.start_time));
                                        html.push('结束时间:' + Web_formatDateTime(item.end_time));
                                        html.push('附加信息:' + item.content);
                                        $tipsStatus.html(html.join(', '));
                                    });
                                });
                            }
                        });
                    }).trigger('click');
                }, 200);
            })('${info.flow_content!""}');
        }
    });
});
</script>
</body>
</html>