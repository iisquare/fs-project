"use strict";angular.module("ui.multiselect",["multiselect.tpl.html"]).factory("optionParser",["$parse",function(a){var b=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;return{parse:function(c){var d=c.match(b);if(!d)throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_' but got '"+c+"'.");return{itemName:d[3],source:a(d[4]),viewMapper:a(d[2]||d[1]),modelMapper:a(d[1])}}}}]).directive("multiselect",["$parse","$document","$compile","$interpolate","optionParser",function(a,b,c,d,e){return{restrict:"E",require:"ngModel",link:function(b,f,g,h){function i(){x.items.length=0;var a=q.source(b);if(angular.isDefined(a)&&null!==a)for(var c=0;c<a.length;c++){var d={};d[q.itemName]=a[c],x.items.push({label:q.viewMapper(d),model:a[c],checked:!1})}}function j(){if(k(h.$modelValue))return x.header=g.msHeader||"Select",x.header;if(r)g.msSelected?x.header=d(g.msSelected)(x):x.header=h.$modelValue.length+" selected";else{var a={};a[q.itemName]=h.$modelValue,x.header=q.viewMapper(a)}}function k(a){if(a===!0||a===!1)return!1;if(!a)return!0;if(a.length&&a.length>0)return!1;for(var b in a)if(a[b])return!1;return void 0===s||void 0===a[s]}function l(a){a.checked||(x.uncheckAll(),a.checked=!a.checked),n(!1)}function m(a){a.checked=!a.checked,n(!0)}function n(a){var b;a?(b=[],angular.forEach(x.items,function(a){a.checked&&b.push(a.model)})):angular.forEach(x.items,function(a){return a.checked?(b=a.model,!1):void 0}),h.$setViewValue(b)}function o(a){angular.isArray(a)?angular.forEach(x.items,function(b){b.checked=!1,angular.forEach(a,function(a){void 0===s&&angular.equals(b.model,a)?b.checked=!0:void 0!==s&&angular.equals(b.model[s],a[s])&&(b.checked=!0)})}):angular.forEach(x.items,function(b){b.checked=!1,void 0===s&&angular.equals(b.model,a)?b.checked=!0:void 0!==s&&null!==a&&angular.equals(b.model[s],a[s])&&(b.checked=!0)})}var p=g.options,q=e.parse(p),r=!!g.multiple,s=g.compareBy,t=g.scrollAfterRows,u=g.tabindex,v=g.maxWidth,w=!1,x=b.$new();x.filterAfterRows=g.filterAfterRows;var y=g.change||angular.noop;x.items=[],x.header="Select",x.multiple=r,x.disabled=!1,x.ulStyle={},void 0!==t&&parseInt(t).toString()===t&&(x.ulStyle={"max-height":26*t+14+"px","overflow-y":"auto","overflow-x":"hidden"}),void 0!==u&&parseInt(u).toString()===u&&(x.tabindex=u),void 0!==v&&parseInt(v).toString()===v&&(x.maxWidth={"max-width":v+"px"}),b.$on("$destroy",function(){x.$destroy()});var z=angular.element("<multiselect-popup></multiselect-popup>");(g.required||g.ngRequired)&&(w=!0),g.$observe("required",function(a){w=a}),x.$watch(function(){return a(g.disabled)(b)},function(a){x.disabled=a}),x.$watch(function(){return a(g.multiple)(b)},function(a){r=a||!1}),x.$watch(function(){return q.source(b)},function(a){angular.isDefined(a)&&i()},!0),x.$watch(function(){return h.$modelValue},function(a,b){angular.isDefined(a)&&(o(a),x.$eval(y)),j(),h.$setValidity("required",x.valid())},!0),i(),f.append(c(z)(x)),x.valid=function(){if(!w)return!0;var a=h.$modelValue;return angular.isArray(a)&&a.length>0||!angular.isArray(a)&&null!==a},x.checkAll=function(){r&&(angular.forEach(x.items,function(a){a.checked=!0}),n(!0))},x.uncheckAll=function(){angular.forEach(x.items,function(a){a.checked=!1}),n(!0)},x.select=function(a,b){r===!1?(l(b),x.toggleSelect()):(a.stopPropagation(),m(b))}}}}]).directive("multiselectPopup",["$document",function(a){return{restrict:"E",scope:!1,replace:!0,templateUrl:"multiselect.tpl.html",link:function(b,c,d){function e(d){f(d.target,c.find(d.target.tagName))||(c.removeClass("open"),a.unbind("click",e),b.$apply())}b.isVisible=!1,b.toggleSelect=function(){c.hasClass("open")?(b.filter="",c.removeClass("open"),a.unbind("click",e)):(b.filter="",c.addClass("open"),a.bind("click",e))};var f=function(a,b){for(var c=0;c<b.length;c++)if(a===b[c])return!0;return!1}}}}]),angular.module("multiselect.tpl.html",[]).run(["$templateCache",function(a){a.put("multiselect.tpl.html",'<div class="btn-group">\n  <button tabindex="{{tabindex}}" title="{{header}}" type="button" class="btn btn-default dropdown-toggle" ng-click="toggleSelect()" ng-disabled="disabled" ng-class="{\'error\': !valid()}">\n    <div ng-style="maxWidth" style="padding-right: 13px; overflow: hidden; text-overflow: ellipsis;">{{header}}</div><span class="caret" style="position:absolute;right:10px;top:14px;"></span>\n  </button>\n  <ul class="dropdown-menu" style="margin-bottom:30px;padding-left:5px;padding-right:5px;" ng-style="ulStyle">\n    <input ng-show="items.length > filterAfterRows" ng-model="filter" style="padding: 0px 3px;margin-right: 15px; margin-bottom: 4px;" placeholder="Type to filter options">    <li data-stopPropagation="true" ng-repeat="i in items | filter:filter">\n      <a ng-click="select($event, i)" style="padding:3px 10px;cursor:pointer;">\n        <i class="glyphicon" ng-class="{\'glyphicon-ok\': i.checked, \'empty\': !i.checked}"></i> {{i.label}}</a>\n    </li>\n  </ul>\n</div>')}]);