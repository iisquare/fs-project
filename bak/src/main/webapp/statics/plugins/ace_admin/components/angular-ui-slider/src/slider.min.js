/*
 jQuery UI Slider plugin wrapper
*/
angular.module("ui.slider",[]).value("uiSliderConfig",{}).directive("uiSlider",["uiSliderConfig","$timeout",function(a,b){return a=a||{},{require:"ngModel",compile:function(){var c=function(c,d,e,f){function g(a,b){return b?parseFloat(a):parseInt(a,10)}function h(){d.hasClass("ui-slider")&&d.slider("destroy")}var i=angular.copy(c.$eval(e.uiSlider)),j=angular.extend(i||{},a),k={min:null,max:null},l=["min","max","step","lowerBound","upperBound"],m=!angular.isUndefined(e.useDecimals),n=function(){angular.isArray(f.$viewValue)&&j.range!==!0&&(console.warn("Change your range option of ui-slider. When assigning ngModel an array of values then the range option should be set to true."),j.range=!0),angular.forEach(l,function(a){angular.isDefined(e[a])&&(j[a]=g(e[a],m))}),d.slider(j),n=angular.noop};angular.forEach(l,function(a){e.$observe(a,function(b){b&&(n(),j[a]=g(b,m),d.slider("option",a,g(b,m)),f.$render())})}),e.$observe("disabled",function(a){n(),d.slider("option","disabled",!!a)}),c.$watch(e.uiSlider,function(a){n(),void 0!==a&&d.slider("option",a)},!0),b(n,0,!0),d.bind("slide",function(a,b){var e;if(b.values){var g=b.values.slice();j.lowerBound&&g[0]<j.lowerBound&&(g[0]=Math.max(g[0],j.lowerBound)),j.upperBound&&g[1]>j.upperBound&&(g[1]=Math.min(g[1],j.upperBound)),g[0]===b.values[0]&&g[1]===b.values[1]||(e=!0,b.values=g)}else{var h=b.value;j.lowerBound&&h<j.lowerBound&&(h=Math.max(h,j.lowerBound)),j.upperBound&&h>j.upperBound&&(h=Math.min(h,j.upperBound)),h!==b.value&&(e=!0,b.value=h)}return f.$setViewValue(b.values||b.value),$(b.handle).find(".ui-slider-tip").text(b.value),c.$apply(),e?(setTimeout(function(){d.slider("value",b.values||b.value)},0),!1):void 0}),f.$render=function(){n();var a=j.range===!0?"values":"value";if(j.range===!0||!isNaN(f.$viewValue)||f.$viewValue instanceof Array?j.range&&!angular.isDefined(f.$viewValue)&&(f.$viewValue=[0,0]):f.$viewValue=0,j.range===!0){if(f.$viewValue&&angular.isString(f.$viewValue)&&1===(f.$viewValue.match(/,/g)||[]).length){var b=f.$viewValue.split(",");f.$viewValue=[Number(b[0]),Number(b[1])]}angular.isDefined(j.min)&&j.min>f.$viewValue[0]&&(f.$viewValue[0]=j.min),angular.isDefined(j.max)&&j.max<f.$viewValue[1]&&(f.$viewValue[1]=j.max),f.$viewValue[0]>f.$viewValue[1]&&(k.min>=f.$viewValue[1]&&(f.$viewValue[1]=k.min),k.max<=f.$viewValue[0]&&(f.$viewValue[0]=k.max)),k.min=f.$viewValue[0],k.max=f.$viewValue[1]}d.slider(a,f.$viewValue)},c.$watch(e.ngModel,function(){j.range===!0&&f.$render()},!0),c.$on("$destroy",h),d.one("$destroy",h)},d=function(a,c,d,e){var f=angular.extend({},a.$eval(d.uiSlider)),g=["min","max","step","tick","tip"];if(angular.forEach(g,function(a){angular.isDefined(d[a])&&(f[a]=d[a])}),angular.isDefined(f.tick)&&angular.isDefined(f.step))for(var h=parseInt((parseInt(f.max)-parseInt(f.min))/parseInt(f.step)),i=h;i>=0;i--){var j=i/h*100+"%";$("<div/>").addClass("ui-slider-tick").appendTo(c).css({left:j})}angular.isDefined(f.tip)&&b(function(){c.find(".ui-slider-handle").append('<div class="ui-slider-tip">'+e.$viewValue+"</div>")},10)};return{pre:c,post:d}}}}]);