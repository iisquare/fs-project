subprojects {
    archivesBaseName = rootProject.name + '-flink-plugins-' + name

    dependencies {
        compile project(':flink:flow')
    }

    // 拷贝配置文件
    task generateConfigFiles(type: Copy) {
        from 'config.json'
        into 'build/libs'
        doLast {
            def data = [
                    'targetCompatibility' : "${targetCompatibility}",
                    'flinkVersion' : "${flinkVersion}",
                    'name' : "${project.name}",
                    'version' : "${version}",
                    'description' : "${project.description}"
            ]
            def rootDir = project.rootDir.absolutePath
            def inputFile = new File(rootDir + '/flink-plugins/' + project.name + '/config.json')
            def outputFile = new File(rootDir + '/flink-plugins/' + project.name + '/build/libs/config.json')
            def printWriter = outputFile.newPrintWriter('utf-8')
            inputFile.eachLine { line->
                line = line.replaceAll(/\$\{(\w+)\}/, {data[it[1]]})
                println line
                printWriter.println(line)
            }
            printWriter.flush()
            printWriter.close()
        }
    }

    // 生成插件压缩文件
    task zip(type: Zip, dependsOn: [clean, jar, generateConfigFiles]) {
        into ('flink') {
            from('build/libs') {
                include 'config.json', '*.jar'
            }
        }
    }

}